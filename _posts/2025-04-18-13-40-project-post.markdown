---
layout: post
title:  "저비용·고효율: 인버터 원격 모니터링 및 공정 준비 자동화"
date:   2025-04-18 13:40:00 +0900
categories: [konkuk, project]
--- 

> **목표**  
> - **경량형 스마트 제조 시스템** 구현  
> - **강산 FA**와 같은 중소 제조 업체의 **인버터 판넬 조립 공정**에 집중 → _생산성 ↑ · 오류 ↓ · 인건비 ↓_  
> - **데이터 기반 의사 결정** 및 **원격 모니터링**으로 유지보수 부담 완화  

> **핵심 키워드** #IoT  #Python  #YOLO  #협동로봇  #Low‑Cost  #Smart Factory

---

## 목차
1. [Wi‑Fi 인버터 원격 모니터링 모듈](#WiFi)
2. [BOM 기반 케이블 자동 컷·라벨 시스템](#BOM)
3. [Pick‑to‑Light 키팅 선반](#Pick2Light)
4. [YOLO 기반 조립 실수 감지 시스템](#YOLO)
5. [로봇팔 자동 볼트 체결 시스템](#Robot)
6. [예산 총괄표](#Budget)
7. [플랫폼 제외 논리 및 전략](#NoPlatform)

---

<a id="WiFi"></a>
## ① Wi‑Fi 인버터 **원격 모니터링 모듈**

> 장비 패널에 **ESP32 센서 박스**를 끼워 RS‑485 신호를 Wi‑Fi MQTT로 변환 →  
> **현장 출동 없이** 스마트폰·PC에서 _온도·전류·알람_ 확인 & 긴급 **Remote Reset** 가능!

### 🧩 구성 부품

| 부품 | 수량 | 단가(₩) | 소계(₩) |
|:-----|:----:|:-------:|:-------:|
| ESP32‑DevKit | 1 | 8,000 | 8,000 |
| MAX485 RS‑485 컨버터 | 1 | 1,000 | 1,000 |
| 5 V 어댑터·케이블 | 1 | 3,000 | 3,000 |
| **소계** | | | **12,000** |

### 🔧 오픈소스·설치

| 단계 | 명령 | 비고 |
|:-----|:-----|:-----|
| 펌웨어 플래시 | `esptool.py --chip esp32 write_flash 0x1000 firmware.bin` | `gmasse/esp-modbus-mqtt` Hex 사용 |
| 브로커 설치 | `docker compose up -d emqx grafana timescale` | 10분 내 풀스택 기동 |
| 대시보드 임포트 | Grafana → _Import JSON_ → 제공된 ① 패널 | 실시간 그래프 확인 |

### ✅ 기대 효과

| 지표 | 변동 | 근거 |
|:-----|:-----|:-----|
| A/S 출장 횟수 | **▼ 30%** | 단순 오류(오버로드·발열) → 원격 리셋 가능 |
| 예지보전 정확도 | **▲ 20%** | 1 Hz 단위 시계열 DB 축적 → 이상 패턴 조기 감지 |

---

<a id="BOM"></a>
## ② BOM 기반 **케이블 자동 컷·라벨 시스템**

> Excel BOM 업로드 → **필요 길이만** 정밀 커팅 + **열전사 라벨** 즉시 부착  
> 배선 공정 직전 준비 시간을 절반으로!

### 🧩 구성 부품

| 부품 | 수량 | 단가(₩) | 소계 |
|------|------|---------|-----|
| Arduino Nano | 1 | 6,000 | 6,000 |
| NEMA17 스텝모터 | 1 | 9,000 | 9,000 |
| 커팅 솔레노이드 | 1 | 6,000 | 6,000 |
| 광학 릴 센서 | 1 | 4,000 | 4,000 |
| Zebra GK420 (중고) | 1 | 160,000 | 160,000 |
| **합계** |   |   | **185,000** |

### 🔧 오픈소스·사용법
1. `python bom_to_gcode.py mylist.xlsx` → `out.gcode` 생성  
2. SD카드 삽입 → 아두이노가 모터·커터·라벨러 자동 제어  
3. 라벨 템플릿은 ZPL 언어로 제공 → 크기·QR 코드 자유 변경

### ✅ 효과
- **준비 시간** 120 min → **70 min** (‑41%)  
- 잘못된 케이블 삽입 오류 **2건/주 → 0.3건/주**

---

<a id="YOLO"></a>
## ③ YOLO + GPT **조립 실수 감지** PoC

> **실시간 비전 + 생성형 AI** 조합  
> "_B상 단자에 파란 전선이 연결돼 있습니다. 빨간 전선으로 교체하세요._"

### 🧩 구성 부품

| 부품 | 수량 | 단가 | 소계 |
|------|------|------|------|
| Jetson Nano 4 GB | 1 | 90,000 | 90,000 |
| RPi Camera v3 | 2 | 25,000 | 50,000 |
| LED 바 조명 | 2 | 10,000 | 20,000 |
| **합계** |   |   | **160,000** |

### 🔧 파이프라인
1. YOLOv8n 모델 학습 (`ultralytics train data=custom.yaml epochs=30`)  
2. `fastapi` 서버에서 결과 JSON → LangChain Prompt  
3. GPT‑3.5 Turbo 호출 → 자연어 메시지  
4. Streamlit 대시보드 + WebSocket 푸시

### ✅ 성능
- Top‑1 오류 검출 정확도 **≈ 92%**  
- 재작업률 **50% 감소**, 현장 피드백 < 0.1 s latency

---

<a id="Robot"></a>
## ④ 로봇팔 기반 **자동 볼트 체결**  
_(M3~M4 대응 · Z 자동 감지 · CAD 좌표 변환)_

### 🧩 구성 부품

| 부품 | 수량 | 단가 | 소계 |
|------|------|------|------|
| uFactory Lite 6 로봇팔 | 1 | 700,000 | 700,000 |
| HIOS NXA‑503 스마트 드라이버 | 1 | 800,000 | 800,000 |
| 6축 힘 센서 | 1 | 150,000 | 150,000 |
| **총합** |   |   | **1,650,000** |

> *저예산 대안* : 스프링 노즈(₩5,000) 사용 시 1,505,000 원

### 🔧 관건 기술
- **CAD DXF → 좌표 추출** : `ezdxf` 이용, CIRCLE 엔티티 → (x, y)  
- **Z 자동 감지** : 힘 5 N 감지 시 로봇 Z정지 → 토크 체결  
- **ROS 2 제어** : `ufactory_ros2` 패키지로 `.move_to()` 반복

### ✅ 성과
| 메트릭 | 기존 | 자동화 |
|--------|------|--------|
| 체결 속도 | 30 s | **10 s** |
| 토크 편차 | ±15% | **±3%** |
| Teach 필요 | 모델마다 10 min | **CAD만 교체** |

---

<a id="Budget"></a>
## 💰 예산 총괄

| 모듈 | 비용(₩) |
|------|--------|
| ① 모니터링 (5세트) | 60,000 |
| ② 케이블 컷·라벨 | 185,000 |
| ③ Pick‑to‑Light | 46,000 |
| ④ YOLO PoC | 160,000 |
| ⑤ 로봇팔 체결 | 1,650,000 |
| **총계** | **2,101,000** |

> **스프링 노즈 버전** : 총 1,505,000 원 (힘 센서 제외)

---

<a id="NoPlatform"></a>
## ⚠️ 온라인 판매 플랫폼을 본 과제에 넣지 않는 이유 & 대응

### 과한 이유
| 구분 | 상세 |
|------|------|
| 기술 스코프 | 생산 자동화(물리) vs 온라인 플랫폼(IT 서비스) |
| 핵심 타이틀 | 본 과제 = "판넬 조립 공정 자동화" 에 집중해야 함 |
| 명분·지표 | 생산 자동화 = 정량 KPI (시간·오류·토크) <br>플랫폼 = 정성 니즈 |
| 일정·분량 | 6 개월  · 20p 내외 과제에 동시 탑재 시 실행 리스크 |

### 전략적 대응
| 방식 | 설명 |
|------|------|
| 과제 범위 밖으로 | 현재 보고서는 **생산 자동화**에 집중 |
| 고도화 항목 표기 | 보고서 맨뒤 "B2B 주문 플랫폼 = 차기 연계 과제" 1 p 언급 |
| 별도 PoC 진행 | Streamlit MVP → 자사 홈페이지 탑재 & IR 자료 활용 |

---

## 🎯 기대 효과

| 항목 | 개선 전 | 개선 후 | 효과 |
|------|---------|--------|------|
| 케이블 준비 | 120 min | 70 min | **‑41%** |
| A/S 출장 | 월 10회 | 월 7회 | **‑30%** |
| 조립 오류 | 1.5% | 0.75% | **‑50%** |
| 볼트 체결 편차 | ±15% | ±3% | 제품 신뢰도 ↑ |
| 공정 인건비 | 기준 100 | 60–70 | **30–40% 절감** |

---

## ✔️ 핵심 메시지

|  |
|--|
| ✅ 단순 반복·고위험 작업 자동화 → **현장 만족도·품질 동시 향상** |

---