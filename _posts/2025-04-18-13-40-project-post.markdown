---
layout: post
title:  "저비용·고효율: 인버터 원격 모니터링 및 공정 준비 자동화"
date:   2025-04-18 13:40:00 +0900
categories: [konkuk, project]
--- 
# 저비용·고효율: 인버터 원격 모니터링 및 공정 준비 자동화 프로젝트 _v0.1_

> **목표:** 대학생/대학원생 1~2인이 6개월 안에 실제 현장에 도입 가능한 **경량형 스마트 제조 시스템**을 제안합니다.  
> **대상:** 강산 FA와 같은 중소 제조 기업 – 반복적인 인버터 판넬 조립 작업에 자동화 적용을 목표로 함.  
> **핵심 키워드:** 생산성 향상 · 작업 오류 감소 · 인건비 절감 · 데이터 기반 운영  

---

## ① Wi‑Fi 인버터 원격 모니터링 모듈

> **주석:** 전력 장비 상태를 실시간으로 확인하는 소형 센서 박스로, 작업자가 **현장에 가지 않아도** 상태 확인 및 리셋이 가능합니다.

### 🧩 구성 부품
| 부품 | 수량 | 단가(₩) | 소계 |
|------|------|--------|------|
| ESP32-DevKit | 1 | 8,000 | 8,000 |
| MAX485 RS-485 컨버터 | 1 | 1,000 | 1,000 |
| 5V 아답터 및 케이블 | 1 | 3,000 | 3,000 |
| **소계** | | | **12,000** |

### 🔧 오픈소스 활용
- [`gmasse/esp-modbus-mqtt`](https://github.com/gmasse/esp-modbus-mqtt): Modbus RTU 값을 MQTT로 전송하는 펌웨어
- [`docker-grafana-timescale`](https://github.com/stefan-trent/docker-grafana-timescale): 시계열 DB + 대시보드 세트 구성

### ✅ 기대 효과
- 장비 오작동 시 현장 출동 대신 원격 리셋으로 해결 → **A/S 출장 30% 절감**
- 장비 온도·전류 상태 상시 수집 → 고장 예측 가능성 확보

---

## ② BOM 기반 케이블 자동 컷·라벨 시스템

> **주석:** 부품 리스트(EXCEL)를 넣으면, 필요한 길이만큼 선을 자르고 자동으로 라벨까지 붙여주는 시스템

### 🧩 구성 부품
| 부품 | 수량 | 단가(₩) | 소계 |
|------|------|--------|------|
| Arduino Nano | 1 | 6,000 | 6,000 |
| NEMA17 스텝모터 | 1 | 9,000 | 9,000 |
| 커팅용 솔레노이드 | 1 | 6,000 | 6,000 |
| 릴 거리 센서 | 1 | 4,000 | 4,000 |
| 중고 Zebra 라벨기 | 1 | 160,000 | 160,000 |
| **소계** | | | **185,000** |

### 🔧 오픈소스 활용
- [`hemangjoshi37a/AutoCut`](https://github.com/hemangjoshi37a/AutoCut): 도면 및 아두이노 코드 제공
- [`pallets/click`](https://github.com/pallets/click): Python 기반 명령행 인터페이스(BOM 파싱)

### ✅ 기대 효과
- 케이블 준비 시간 **40% 이상 단축 (120분 → 70분)**  
- 라벨 부착으로 현장 조립자 혼선 방지 → 실수율 감소

---

## ③ Pick‑to‑Light 키팅 선반

> **주석:** 부품을 고를 때마다 **불이 들어오는 통(BIN)**만 보면 되므로, **누락 걱정 없이 정확히 피킹** 가능

### 🧩 구성 부품 (20 BIN 기준)
| 부품 | 수량 | 단가(₩) | 소계 |
|------|------|--------|------|
| ESP32 | 2 | 8,000 | 16,000 |
| WS2812B LED 스트립 | 2 | 5,000 | 10,000 |
| 푸시 스위치 | 20 | 1,000 | 20,000 |
| **소계** | | | **46,000** |

### 🔧 오픈소스 활용
- [`marco-lanc/Pick2Light`](https://github.com/marco-lanc/Pick2Light): ESP32 기반 예제
- [`node-red/node-red`](https://github.com/node-red/node-red): MQTT 기반 직관적 흐름 설계

### ✅ 기대 효과
- 부품 누락률 **1.5% → 0.2%**  
- 초보 작업자도 정확한 부품 선별 가능

---

## ④ YOLO 기반 조립 실수 감지 (PoC)

> **주석:** 카메라로 조립 실수를 **YOLOv8으로 탐지**, 실시간으로 **GPT가 자연어로 조언**  
> 관리자 대시보드에서는 오류 발생 로그를 **실시간 확인** 가능

### 🧩 구성 부품
| 항목 | 수량 | 단가(₩) | 소계 |
|------|------|--------|------|
| Jetson Nano (4GB) | 1 | 90,000 | 90,000 |
| RPi Camera v3 | 2 | 25,000 | 50,000 |
| LED 바 조명 | 2 | 10,000 | 20,000 |
| **합계** | | | **160,000** |

### 🔧 오픈소스 활용
- `ultralytics/ultralytics` – YOLOv8 모델 학습 및 추론
- `streamlit/streamlit` – 실시간 대시보드 UI
- `langchain/langchain` – YOLO 결과 → GPT 프롬프트 생성
- `fastapi-websocket-broadcast` – 실시간 WebSocket 브로드캐스트

### ✅ 동작 구조
1. YOLO가 단자 색상·위치 오류 감지
2. JSON 생성 → GPT가 자연어 설명
3. 작업자에게 음성 또는 태블릿으로 안내
4. 관리자 대시보드에 실시간 기록

---

## ⑤ 로봇팔 기반 자동 볼트 체결 (M3~M4 대응 + Z 감지 + CAD 좌표 변환)

> **주석:** CAD 도면에서 좌표 추출 → 로봇이 해당 위치로 이동해, 힘이 느껴지면 자동으로 멈추고 **정해진 토크로 체결**함  
> M3~M4의 작은 볼트에도 대응 가능

### 🧩 구성 부품
| 항목 | 수량 | 단가(₩) | 소계 |
|------|------|--------|------|
| uFactory Lite 6 협동로봇 | 1 | 700,000 | 700,000 |
| HIOS NXA‑503 드라이버 | 1 | 800,000 | 800,000 |
| 힘 센서 (6축) | 1 | 150,000 | 150,000 |
| **합계** | | | **1,650,000** |

*저예산 대안:* 스프링 노즈 부착 시 1,505,000원

### 🔧 오픈소스 활용
- `ufactory/ufactory_ros2` – Python SDK
- `hiwin-tech/open-driver-protocol` – 정밀 토크 제어 예제
- `ezdxf` – DXF → 좌표 자동 변환

### ✅ 기대 효과
- **Teach 없이도 CAD 좌표만 넣으면 자동 체결**
- 체결 속도 3배 ↑ / ±3% 정밀 토크 유지
- 손목 부상 위험, 체결 실수 대폭 감소

---

## 📦 전체 구축 예산 요약

| 모듈 | 비용(₩) | 비고 |
|------|---------|------|
| ① 모니터링 모듈 (5세트) | 60,000 | Wi-Fi + RS485 |
| ② 케이블 컷·라벨 시스템 | 185,000 | 중고 라벨러 포함 |
| ③ Pick-to-Light 시스템 | 46,000 | 20 BIN 기준 |
| ④ YOLO 실수 감지 시스템 | 160,000 | Jetson + Cam 2대 |
| ⑤ 로봇팔 체결 시스템 | 1,650,000 | 스마트 드라이버 + 힘센서 포함 |
| **총계** | **2,101,000** | *(세금·인건비 제외)*

---


## ⚠️ 왜 온라인 판매 플랫폼까지 포함하는 건 과한가?

| 이유 | 설명 |
|------|------|
| **기술 범위가 달라짐** | ① 생산 공정 자동화 (IoT, 로봇, AI 비전) ← **물리적인 영역**<br>② 온라인 유통 플랫폼 (웹 개발, UI/UX, DB 설계) ← **IT 서비스 영역** |
| **사업 타이틀이 흔들림** | 중기부 과제는 "한 줄로 요약되는 문제 해결"이 중요함 → 지금은 **“소형 판넬 조립 공정 자동화”**가 메인임 |
| **과제 명분이 약해짐** | 자동화 공정은 명확한 **생산성·정확도 개선 지표**가 있음<br>판매 플랫폼은 “있으면 좋다” 수준의 **정성적 니즈**로 보일 수 있음 |
| **과제 분량·구현 가능성 한계** | 6개월 과제로 모든 걸 다루기엔 **리소스 초과** 및 **실현 가능성 약화** 우려 |

---

## ✅ 전략적 대응 방향

| 방식 | 내용 | 장점 |
|------|------|------|
| **본 과제엔 포함하지 않고** | 현재 제안서는 **"생산 현장 자동화"** 중심으로 정리 | 과제 초점이 명확하고 기술적으로 집중 가능 |
| **추후 고도화 항목으로 제안** | 보고서 말미에 **“스마트 주문 플랫폼은 차기 연계 사업화 가능”**으로 언급 | 평가자에게 **스케일업 여지와 성장 계획**을 어필 |
| **별도 PoC 개발 추진** | 과제 외부에서 **Streamlit/Next.js 기반 프로토타입** 개발 → B2B 제안 or 자사 홈페이지 연동 | 제품 수주 구조까지 **디지털 전환 실현**, 향후 **IR 자료**로도 활용 가능 |

---

## 📌 결론 요약

- ❌ 지금 중기부 과제에 온라인 판매 플랫폼까지 넣는 건 **일관성과 명확성을 해친다**
- ✅ 대신 **보고서 말미나 후속 개발 항목**으로 짧게 언급하면 충분하다
- 🧩 이후 별도 기획으로 발전시켜 **B2B 유통 자동화**를 구축하는 것이 전략적으로 바람직하다
