---
layout: post
title: ""
date: 2025-04-07 10:26:00 +0900
categories: [konkuk, rag]
--- 
# 도큐먼트 로드 (Document Loader)

**도큐먼트 로드** 단계는 Retrieval-Augmented Generation(RAG) 시스템의 첫 번째 단계로, 전체 프로세스에서 매우 중요한 기초 작업을 수행합니다. 이 단계의 주된 목적은 RAG 시스템이 필요로 하는 데이터를 외부 소스로부터 효율적으로 수집하고 준비하는 것입니다.

---

## 1. 데이터 소스의 선택

도큐먼트 로더는 먼저 어떤 종류의 데이터가 필요한지, 그리고 그 데이터를 어디서 어떻게 수집할지 결정해야 합니다.  
데이터 소스는 웹사이트, 데이터베이스, API, 공개 데이터 세트 등 다양할 수 있습니다.

예시:
- 최신 뉴스 데이터가 필요하다면 → 실시간 뉴스 API나 크롤링 (`WebBaseLoader`)
- 과학적 논문이나 전문 지식이 필요하다면 → 학술 데이터베이스 (`ArxivLoader`)

---

## 2. 데이터 수집

선택된 데이터 소스에서 필요한 데이터를 수집하는 작업을 진행합니다.  
이 과정은 API 호출, 웹 스크래핑, 데이터베이스 쿼리 등을 포함할 수 있으며, 인증이나 접근 권한 설정이 필요할 수도 있습니다.

---

## 3. 데이터 필터링과 전처리

수집된 데이터 중에서 RAG 시스템에 필요한 정보만을 추출하고, 필요에 따라 데이터를 정제합니다.  
이 단계에서는 불필요한 포맷팅을 제거하거나, 언어나 문맥에 맞는 필터를 적용할 수 있습니다.

- 불필요한 이미지 제거
- 그래프 제거
- License 표기 등 제거
- 답변에 포함되지 말아야 할 정보 제거

---

## 4. 데이터 로드

전처리된 데이터를 RAG 시스템 내부적으로 사용할 수 있는 형식으로 변환하고 로드합니다.  
이는 보통 메모리 내 데이터 구조로의 변환을 포함하며, 필요에 따라 데이터베이스나 파일 시스템에 저장할 수도 있습니다.

지원 포맷 예시:
- PDF 문서
- Word / 한글 문서
- Excel / CSV / SQL Table
- Markdown (.md) 파일
- HTML 문서

---

## 예시: 뉴스 데이터 로드

RAG 시스템이 세계 뉴스에 대한 질문에 답변하기 위해 사용되는 경우:

1. **데이터 소스 선택**  
   → 신뢰할 수 있는 뉴스 서비스 또는 뉴스 사이트 선택

2. **데이터 수집**  
   → API 혹은 크롤링을 통해 최신 뉴스 기사 데이터 수집

3. **데이터 필터링 및 전처리**  
   → 국제 정치, 경제 등 특정 주제에 해당하는 기사만 선택  
   → 광고, 메타데이터 제거

4. **데이터 로드**  
   → 전처리된 뉴스 기사를 데이터베이스에 저장하거나 메모리에 로드

---

## 예시: PDF 문서 데이터 로드

1. **데이터 소스 선택**  
   → 대학교 디지털 라이브러리, 연구 기관 DB, Arxiv 등

2. **데이터 수집**  
   → 필요한 PDF 문서를 직접 다운로드하거나 API로 자동 수집

3. **데이터 필터링과 전처리**  
   → 텍스트, 이미지, 표 등 다양한 형태의 정보 처리  
   → OCR(Optical Character Recognition) 사용 가능  
   → 텍스트로 변환 후 불필요한 요소 제거, 문장 재구성

---

## 코드 예시

### 단계 1: 문서 로드 (Load Documents)

```python
from langchain_community.document_loaders import PyMuPDFLoader

# PDF 파일 경로를 지정하여 로더 생성
loader = PyMuPDFLoader("data/문서.pdf")

# 문서 로드
docs = loader.load()
```  

이러한 과정을 통해 RAG 시스템은 필요한 데이터를 효과적으로 활용할 준비를 마치게 됩니다.  
데이터 로드는 시스템의 성능과 직결되므로 매우 중요하며, 이 단계에서의 효율성과 정확성이 전체 시스템의 출력 품질에 큰 영향을 미칩니다.